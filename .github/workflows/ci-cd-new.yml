name: Build, Test, and Deploy (Alternative - Manual Only)

# Este workflow está deshabilitado para evitar despliegues duplicados
# Solo se activará manualmente cuando sea necesario
on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Razón para ejecutar este workflow alternativo'
        required: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: direstrepobr
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push multi-architecture image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          direstrepobr/minimal-api-demo:latest
          direstrepobr/minimal-api-demo:multiarch
        
  deploy-to-azion:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Azion
      id: azion_deploy
      uses: aziontech/edge-computing-actions@v0
      with:
        azionPersonalToken: ${{ secrets.AZION_TOKEN }}
        applicationName: "dotnet-minimal-api-demo"
        buildPreset: "javascript"
        buildMode: "compute"
        buildEntry: "./azion_container_main.js"
        functionArgsFilePath: "./args.json"
        
    - name: Get the output Azion Edge Deploy
      run: |
        echo "Application ID = ${{ steps.azion_deploy.outputs.applicationId }}"
        echo "Domain URL = ${{ steps.azion_deploy.outputs.domainUrl }}"
